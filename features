import numpy as np

def lower_and_upper_contour(window):
    black_pxl=np.where(np.all(window ==1, axis=1)) #gives a tuple of all indices where value=1
    black_pxl=[(i) for i in zip(black_pxl)] #convert to array
    upper_contour=np.amin(black_pxl)
    lower_contour=np.amax(black_pxl)
    return upper_contour,lower_contour

def transitions(window):
    count=0
    for x in range(window.shape[0]-1):
        if window[x,:]!=window[x+1,:]:
            count+=1
    return count

def percentage_black_pxl(window):
    black_pxl = window.nonzero()
    white_percentage = (window.shape[0] - len(black_pxl[0])) / window.shape[0]*100
    black_percentage=100-white_percentage
    return black_percentage

def percentage_black_pxl_between_LC_UC(window, LC, UC):
    window=window[LC:UC+1,:]
    return percentage_black_pxl(window)

def black_center(window):
    black_pxl = window.nonzero()
    center=np.sum(black_pxl[0])/len(black_pxl[0])
    return center

# #create example window
#window=np.array([0,1,0,0,0,1,1,0])
#or:
# window=np.zeros((20,1), dtype=int)
# for i in [0,3,5,7,9,10,11,12,17]:
#     window[i]=1

#test
#print(lower_and_upper_contour(window))
